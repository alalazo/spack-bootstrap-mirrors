name: "GnuPG"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: gnupg-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      manylinux2014: ${{ steps.filter.outputs.manylinux2014 }}
    steps:
    - uses: actions/checkout@v2
      if: ${{ github.event_name == 'push' }}
      with:
        fetch-depth: 0
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        # See https://github.com/dorny/paths-filter/issues/56 for the syntax used below
        filters: |
          manylinux2014:
          - './gnupg/Dockerfile.manylinux2014'
          - './spack/patches/spack_buildx.patch'

  darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: |
          brew install gawk perl
          git clone https://github.com/spack/spack.git spack-src

          . spack-src/share/spack/setup-env.sh
          spack external find --not-buildable gawk perl
          spack config add "config:install_tree:padded_length:128"
          mkdir -p binary-mirror

          # Inject flags to have compatibility with MacOSX version 10.13 or higher
          spack install gnupg cflags="-mmacosx-version-min=10.13" target=x86_64
          spack buildcache create -d $PWD/binary-mirror -a -u -f gnupg
      - uses: actions/upload-artifact@v2
        with:
          name: gnupg_binary_mirror
          path: binary-mirror

  manylinux2014:
    runs-on: ubuntu-latest
    needs: [ changes ]

    steps:
      - uses: actions/checkout@v2

      # Setup tags to be used for docker images
      - uses: crazy-max/ghaction-docker-meta@v1
        id: docker_meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/gnupg_manylinux2014

      # Login to Github Packages
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v1
        id: qemu
        with:
          platforms: linux/ppc64le,linux/arm64,linux/amd64

      - uses: docker/setup-buildx-action@v1

      # Build and eventually push to registry
      - uses: docker/build-push-action@v2
        # Build and push only if the Dockerfile changed
        if: ${{ needs.changes.outputs.manylinux2014 == 'true' }}
        with:
          file: ./gnupg/Dockerfile.manylinux2014
          platforms: linux/arm64,linux/ppc64le,linux/amd64
          pull: ${{ github.event_name == 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/gnupg_manylinux2014:latest
          labels: ${{ steps.docker_meta.outputs.labels }}

  upload-manylinux2014:
    runs-on: ubuntu-latest
    needs: [ manylinux2014 ]
    steps:
      - uses: actions/checkout@v2
      - run: |
          . ./gnupg/scripts/copy_mirror_arm_ppc.sh
      - uses: actions/upload-artifact@v2
        with:
          name: gnupg_binary_mirror
          path: |
            binary-mirror

  gnupg_json:
    runs-on: ubuntu-latest
    needs: [ upload-manylinux2014, darwin ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/download-artifact@v2
        with:
          name: gnupg_binary_mirror
      - run: |
          pip install ruamel.yaml
          python gnupg/scripts/gnupg_json.py
      - uses: actions/upload-artifact@v2
        with:
          name: gnupg_manifest
          path: |
            gnupg.json
