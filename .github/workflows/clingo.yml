name: clingo

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: clingo-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      manylinux1: ${{ steps.filter.outputs.manylinux1 }}
      manylinux2014: ${{ steps.filter.outputs.manylinux2014 }}
    steps:
    - uses: actions/checkout@v2
      if: ${{ github.event_name == 'push' }}
      with:
        fetch-depth: 0
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        # See https://github.com/dorny/paths-filter/issues/56 for the syntax used below
        filters: |
          manylinux1:
          - './clingo/Dockerfile.manylinux1'
          - './clingo/packages.yaml'
          - './clingo/scripts/create_binary_mirror.sh'
          - './clingo/scripts/install_clingo.py'
          - './clingo/scripts/bootstrap_clingo_manylinux1.sh'
          manylinux2014:
          - './clingo/Dockerfile.manylinux2014'
          - './clingo/scripts/create_binary_mirror.sh'
          - './clingo/scripts/install_clingo.py'
          - './clingo/scripts/bootstrap_clingo_manylinux2014.sh'

  manylinux1:
    runs-on: ubuntu-latest
    needs: [ changes ]
    env:
      PLATFORM: x86_64
      COMMIT_SHA: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v2

      # Setup tags to be used for docker images
      - uses: crazy-max/ghaction-docker-meta@v1
        id: docker_meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/manylinux1_mirrors

      # Login to Github Packages
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v1

      # Build and eventually push to registry
      - uses: docker/build-push-action@v2
        # Build and push only if the Dockerfile changed
        if: ${{ needs.changes.outputs.manylinux1 == 'true' }}
        with:
          file: ./clingo/Dockerfile.manylinux1
          platforms: linux/amd64
          pull: ${{ github.event_name == 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ghcr.io/alalazo/manylinux1_mirrors:latest
          labels: ${{ steps.docker_meta.outputs.labels }}

  upload-manylinux1:
    runs-on: ubuntu-latest
    needs: [ manylinux1 ]
    steps:
      - uses: actions/checkout@v2
      - run: |
          . ./clingo/scripts/copy_mirror_manylinux1.sh
      - uses: actions/upload-artifact@v2
        with:
          name: clingo_binary_mirror
          path: binary-mirror

  macos_clingo:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.5", "3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prepare Spack
        run: |
          brew install bison
          export PATH="/usr/local/opt/bison/bin:$PATH"
          git clone https://github.com/spack/spack.git spack-src
          . spack-src/share/spack/setup-env.sh
          spack external find --not-buildable cmake bison
      - name: Install clingo
        run: |
          . spack-src/share/spack/setup-env.sh
          spack python clingo/scripts/install_clingo.py
          mkdir -p binary-mirror
          spack buildcache create -d $PWD/binary-mirror -a -u -f clingo-bootstrap
      - uses: actions/upload-artifact@v2
        with:
          name: clingo_binary_mirror
          path: binary-mirror

  manylinux2014:
    runs-on: self-hosted
    needs: [ changes ]

    steps:
      - uses: actions/checkout@v2

      # Setup tags to be used for docker images
      - uses: crazy-max/ghaction-docker-meta@v1
        id: docker_meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/manylinux2014_mirrors

      # Login to Github Packages
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v1
        id: qemu
        with:
          platforms: linux/ppc64le,linux/arm64

      - uses: docker/setup-buildx-action@v1

      # Build and eventually push to registry
      - uses: docker/build-push-action@v2
        # Build and push only if the Dockerfile changed
        if: ${{ needs.changes.outputs.manylinux2014 == 'true' }}
        with:
          file: ./clingo/Dockerfile.manylinux2014
          platforms: linux/arm64,linux/ppc64le,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: ${{ github.event_name == 'pull_request' }}
          push: true
          tags: ghcr.io/alalazo/manylinux2014_mirrors:latest
          labels: ${{ steps.docker_meta.outputs.labels }}

  upload-manylinux2014:
    runs-on: ubuntu-latest
    needs: [ manylinux2014 ]
    steps:
      - uses: actions/checkout@v2
      - run: |
          . ./clingo/scripts/copy_mirror_manylinux2014.sh
      - uses: actions/upload-artifact@v2
        with:
          name: clingo_binary_mirror
          path: |
            binary-mirror

  clingo_json:
    runs-on: ubuntu-latest
    needs: [ upload-manylinux2014, upload-manylinux1, macos_clingo ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/download-artifact@v2
        with:
          name: clingo_binary_mirror
      - run: |
          pip install ruamel.yaml
          python clingo/scripts/clingo_json.py
      - uses: actions/upload-artifact@v2
        with:
          name: clingo_manifest
          path: |
            clingo.json
