name: Bootstrap

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      manylinux1_gcc: ${{ steps.filter.outputs.manylinux1_gcc }}
      manylinux1_mirrors: ${{ steps.filter.outputs.manylinux1_mirrors }}
    steps:
    - uses: actions/checkout@v2
      if: ${{ github.event_name == 'push' }}
      with:
        fetch-depth: 0
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        # See https://github.com/dorny/paths-filter/issues/56 for the syntax used below
        filters: |
          manylinux1_gcc:
          - './Dockerfile.manylinux1_gcc9'
          manylinux1_mirrors:
          - './Dockerfile.manylinux1_mirrors'

  manylinux_gcc:
    runs-on: ubuntu-latest
    needs: [ changes ]
    env:
      PLATFORM: x86_64
      COMMIT_SHA: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v2

      # Setup tags to be used for docker images
      - uses: crazy-max/ghaction-docker-meta@v1
        id: docker_meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/manylinux1_gcc9_x86_64

      # Login to Github Packages
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - uses: docker/setup-buildx-action@v1

      # Build and eventually push to registry
      - uses: docker/build-push-action@v2
        # Build and push only if the Dockerfile changed
        if: ${{ needs.changes.outputs.manylinux1_gcc == 'true' }}
        with:
          file: ./Dockerfile.manylinux1_gcc9
          platforms: linux/amd64
          pull: ${{ github.event_name == 'pull_request' }}
          push: true
          tags: ghcr.io/alalazo/manylinux1_gcc9_x86_64:latest
          labels: ${{ steps.docker_meta.outputs.labels }}

  manylinux1_mirrors:
    runs-on: ubuntu-latest
    needs: [ manylinux_gcc ]
    env:
      PLATFORM: x86_64
      COMMIT_SHA: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v2

      # Setup tags to be used for docker images
      - uses: crazy-max/ghaction-docker-meta@v1
        id: docker_meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/manylinux1_mirrors

      # Login to Github Packages
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - uses: docker/setup-buildx-action@v1

      # Build and eventually push to registry
      - uses: docker/build-push-action@v2
        if: ${{ needs.changes.outputs.manylinux1_mirrors == 'true' }}
        with:
          file: ./Dockerfile.manylinux1_mirrors
          platforms: linux/amd64
          pull: ${{ github.event_name == 'pull_request' }}
          push: true
          tags: ghcr.io/alalazo/manylinux1_mirrors_x86_64:latest
          labels: ${{ steps.docker_meta.outputs.labels }}

  upload_clingo:
    runs-on: ubuntu-latest
    needs: [ manylinux1_mirrors ]
    container: ghcr.io/alalazo/manylinux1_mirrors_x86_64:latest
    steps:
    - uses: actions/upload-artifact@v2
      with:
        name: clingo_linux_x86_64
        path: /home/spack/binary-mirror
